//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("IIDXModel", "FK_CSRevivals_SongInfo", "SongInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(striderMVC.Models.SongInfo), "CSRevivals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(striderMVC.Models.CSRevival), true)]
[assembly: EdmRelationshipAttribute("IIDXModel", "FK_CSRevivals_Styles", "Styles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(striderMVC.Models.Style), "CSRevivals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(striderMVC.Models.CSRevival), true)]
[assembly: EdmRelationshipAttribute("IIDXModel", "FK_Scores_DJs", "DJs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(striderMVC.Models.DJ), "Scores", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(striderMVC.Models.Score), true)]
[assembly: EdmRelationshipAttribute("IIDXModel", "FK_Songs_Modes", "Modes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(striderMVC.Models.Mode), "Songs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(striderMVC.Models.Song), true)]
[assembly: EdmRelationshipAttribute("IIDXModel", "FK_Scores_Songs", "Songs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(striderMVC.Models.Song), "Scores", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(striderMVC.Models.Score), true)]
[assembly: EdmRelationshipAttribute("IIDXModel", "FK_SongInfo_Styles", "Styles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(striderMVC.Models.Style), "SongInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(striderMVC.Models.SongInfo), true)]
[assembly: EdmRelationshipAttribute("IIDXModel", "FK_Songs_SongInfo", "SongInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(striderMVC.Models.SongInfo), "Songs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(striderMVC.Models.Song), true)]

#endregion

namespace striderMVC.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IIDXEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IIDXEntities object using the connection string found in the 'IIDXEntities' section of the application configuration file.
        /// </summary>
        public IIDXEntities() : base("name=IIDXEntities", "IIDXEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IIDXEntities object.
        /// </summary>
        public IIDXEntities(string connectionString) : base(connectionString, "IIDXEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IIDXEntities object.
        /// </summary>
        public IIDXEntities(EntityConnection connection) : base(connection, "IIDXEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CSRevival> CSRevivals
        {
            get
            {
                if ((_CSRevivals == null))
                {
                    _CSRevivals = base.CreateObjectSet<CSRevival>("CSRevivals");
                }
                return _CSRevivals;
            }
        }
        private ObjectSet<CSRevival> _CSRevivals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DJ> DJs
        {
            get
            {
                if ((_DJs == null))
                {
                    _DJs = base.CreateObjectSet<DJ>("DJs");
                }
                return _DJs;
            }
        }
        private ObjectSet<DJ> _DJs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Mode> Modes
        {
            get
            {
                if ((_Modes == null))
                {
                    _Modes = base.CreateObjectSet<Mode>("Modes");
                }
                return _Modes;
            }
        }
        private ObjectSet<Mode> _Modes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Score> Scores
        {
            get
            {
                if ((_Scores == null))
                {
                    _Scores = base.CreateObjectSet<Score>("Scores");
                }
                return _Scores;
            }
        }
        private ObjectSet<Score> _Scores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SongInfo> SongInfoes
        {
            get
            {
                if ((_SongInfoes == null))
                {
                    _SongInfoes = base.CreateObjectSet<SongInfo>("SongInfoes");
                }
                return _SongInfoes;
            }
        }
        private ObjectSet<SongInfo> _SongInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Song> Songs
        {
            get
            {
                if ((_Songs == null))
                {
                    _Songs = base.CreateObjectSet<Song>("Songs");
                }
                return _Songs;
            }
        }
        private ObjectSet<Song> _Songs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Style> Styles
        {
            get
            {
                if ((_Styles == null))
                {
                    _Styles = base.CreateObjectSet<Style>("Styles");
                }
                return _Styles;
            }
        }
        private ObjectSet<Style> _Styles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CSRevivals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCSRevivals(CSRevival cSRevival)
        {
            base.AddObject("CSRevivals", cSRevival);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DJs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDJs(DJ dJ)
        {
            base.AddObject("DJs", dJ);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Modes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModes(Mode mode)
        {
            base.AddObject("Modes", mode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Scores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScores(Score score)
        {
            base.AddObject("Scores", score);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SongInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSongInfoes(SongInfo songInfo)
        {
            base.AddObject("SongInfoes", songInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Songs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSongs(Song song)
        {
            base.AddObject("Songs", song);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Styles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStyles(Style style)
        {
            base.AddObject("Styles", style);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IIDXModel", Name="CSRevival")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CSRevival : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CSRevival object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="songInfoID">Initial value of the SongInfoID property.</param>
        /// <param name="styleID">Initial value of the StyleID property.</param>
        public static CSRevival CreateCSRevival(global::System.Int32 id, global::System.Int32 songInfoID, global::System.Int32 styleID)
        {
            CSRevival cSRevival = new CSRevival();
            cSRevival.ID = id;
            cSRevival.SongInfoID = songInfoID;
            cSRevival.StyleID = styleID;
            return cSRevival;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SongInfoID
        {
            get
            {
                return _SongInfoID;
            }
            set
            {
                OnSongInfoIDChanging(value);
                ReportPropertyChanging("SongInfoID");
                _SongInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongInfoID");
                OnSongInfoIDChanged();
            }
        }
        private global::System.Int32 _SongInfoID;
        partial void OnSongInfoIDChanging(global::System.Int32 value);
        partial void OnSongInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StyleID
        {
            get
            {
                return _StyleID;
            }
            set
            {
                OnStyleIDChanging(value);
                ReportPropertyChanging("StyleID");
                _StyleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StyleID");
                OnStyleIDChanged();
            }
        }
        private global::System.Int32 _StyleID;
        partial void OnStyleIDChanging(global::System.Int32 value);
        partial void OnStyleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_CSRevivals_SongInfo", "SongInfo")]
        public SongInfo SongInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SongInfo>("IIDXModel.FK_CSRevivals_SongInfo", "SongInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SongInfo>("IIDXModel.FK_CSRevivals_SongInfo", "SongInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SongInfo> SongInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SongInfo>("IIDXModel.FK_CSRevivals_SongInfo", "SongInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SongInfo>("IIDXModel.FK_CSRevivals_SongInfo", "SongInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_CSRevivals_Styles", "Styles")]
        public Style Style
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("IIDXModel.FK_CSRevivals_Styles", "Styles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("IIDXModel.FK_CSRevivals_Styles", "Styles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Style> StyleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("IIDXModel.FK_CSRevivals_Styles", "Styles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Style>("IIDXModel.FK_CSRevivals_Styles", "Styles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IIDXModel", Name="DJ")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DJ : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DJ object.
        /// </summary>
        /// <param name="dJID">Initial value of the DJID property.</param>
        /// <param name="dJName">Initial value of the DJName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="info">Initial value of the Info property.</param>
        public static DJ CreateDJ(global::System.Int32 dJID, global::System.String dJName, global::System.String password, global::System.String info)
        {
            DJ dJ = new DJ();
            dJ.DJID = dJID;
            dJ.DJName = dJName;
            dJ.Password = password;
            dJ.Info = info;
            return dJ;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DJID
        {
            get
            {
                return _DJID;
            }
            set
            {
                if (_DJID != value)
                {
                    OnDJIDChanging(value);
                    ReportPropertyChanging("DJID");
                    _DJID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DJID");
                    OnDJIDChanged();
                }
            }
        }
        private global::System.Int32 _DJID;
        partial void OnDJIDChanging(global::System.Int32 value);
        partial void OnDJIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DJName
        {
            get
            {
                return _DJName;
            }
            set
            {
                OnDJNameChanging(value);
                ReportPropertyChanging("DJName");
                _DJName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DJName");
                OnDJNameChanged();
            }
        }
        private global::System.String _DJName;
        partial void OnDJNameChanging(global::System.String value);
        partial void OnDJNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Info
        {
            get
            {
                return _Info;
            }
            set
            {
                OnInfoChanging(value);
                ReportPropertyChanging("Info");
                _Info = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Info");
                OnInfoChanged();
            }
        }
        private global::System.String _Info;
        partial void OnInfoChanging(global::System.String value);
        partial void OnInfoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_Scores_DJs", "Scores")]
        public EntityCollection<Score> Scores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Score>("IIDXModel.FK_Scores_DJs", "Scores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Score>("IIDXModel.FK_Scores_DJs", "Scores", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IIDXModel", Name="Mode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mode object.
        /// </summary>
        /// <param name="modeID">Initial value of the ModeID property.</param>
        /// <param name="mode1">Initial value of the Mode1 property.</param>
        /// <param name="abbr">Initial value of the Abbr property.</param>
        public static Mode CreateMode(global::System.Int32 modeID, global::System.String mode1, global::System.String abbr)
        {
            Mode mode = new Mode();
            mode.ModeID = modeID;
            mode.Mode1 = mode1;
            mode.Abbr = abbr;
            return mode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModeID
        {
            get
            {
                return _ModeID;
            }
            set
            {
                if (_ModeID != value)
                {
                    OnModeIDChanging(value);
                    ReportPropertyChanging("ModeID");
                    _ModeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModeID");
                    OnModeIDChanged();
                }
            }
        }
        private global::System.Int32 _ModeID;
        partial void OnModeIDChanging(global::System.Int32 value);
        partial void OnModeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mode1
        {
            get
            {
                return _Mode1;
            }
            set
            {
                OnMode1Changing(value);
                ReportPropertyChanging("Mode1");
                _Mode1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mode1");
                OnMode1Changed();
            }
        }
        private global::System.String _Mode1;
        partial void OnMode1Changing(global::System.String value);
        partial void OnMode1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbr
        {
            get
            {
                return _Abbr;
            }
            set
            {
                OnAbbrChanging(value);
                ReportPropertyChanging("Abbr");
                _Abbr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbr");
                OnAbbrChanged();
            }
        }
        private global::System.String _Abbr;
        partial void OnAbbrChanging(global::System.String value);
        partial void OnAbbrChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_Songs_Modes", "Songs")]
        public EntityCollection<Song> Songs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Song>("IIDXModel.FK_Songs_Modes", "Songs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Song>("IIDXModel.FK_Songs_Modes", "Songs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IIDXModel", Name="Score")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Score : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Score object.
        /// </summary>
        /// <param name="scoreID">Initial value of the ScoreID property.</param>
        /// <param name="dJID">Initial value of the DJID property.</param>
        /// <param name="songID">Initial value of the SongID property.</param>
        /// <param name="eXScore">Initial value of the EXScore property.</param>
        /// <param name="stamp">Initial value of the Stamp property.</param>
        public static Score CreateScore(global::System.Int32 scoreID, global::System.Int32 dJID, global::System.Int32 songID, global::System.Int32 eXScore, global::System.DateTime stamp)
        {
            Score score = new Score();
            score.ScoreID = scoreID;
            score.DJID = dJID;
            score.SongID = songID;
            score.EXScore = eXScore;
            score.Stamp = stamp;
            return score;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScoreID
        {
            get
            {
                return _ScoreID;
            }
            set
            {
                if (_ScoreID != value)
                {
                    OnScoreIDChanging(value);
                    ReportPropertyChanging("ScoreID");
                    _ScoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScoreID");
                    OnScoreIDChanged();
                }
            }
        }
        private global::System.Int32 _ScoreID;
        partial void OnScoreIDChanging(global::System.Int32 value);
        partial void OnScoreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DJID
        {
            get
            {
                return _DJID;
            }
            set
            {
                OnDJIDChanging(value);
                ReportPropertyChanging("DJID");
                _DJID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DJID");
                OnDJIDChanged();
            }
        }
        private global::System.Int32 _DJID;
        partial void OnDJIDChanging(global::System.Int32 value);
        partial void OnDJIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SongID
        {
            get
            {
                return _SongID;
            }
            set
            {
                OnSongIDChanging(value);
                ReportPropertyChanging("SongID");
                _SongID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongID");
                OnSongIDChanged();
            }
        }
        private global::System.Int32 _SongID;
        partial void OnSongIDChanging(global::System.Int32 value);
        partial void OnSongIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EXScore
        {
            get
            {
                return _EXScore;
            }
            set
            {
                OnEXScoreChanging(value);
                ReportPropertyChanging("EXScore");
                _EXScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EXScore");
                OnEXScoreChanged();
            }
        }
        private global::System.Int32 _EXScore;
        partial void OnEXScoreChanging(global::System.Int32 value);
        partial void OnEXScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ArcadeScore
        {
            get
            {
                return _ArcadeScore;
            }
            set
            {
                OnArcadeScoreChanging(value);
                ReportPropertyChanging("ArcadeScore");
                _ArcadeScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArcadeScore");
                OnArcadeScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _ArcadeScore;
        partial void OnArcadeScoreChanging(Nullable<global::System.Int32> value);
        partial void OnArcadeScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Stamp
        {
            get
            {
                return _Stamp;
            }
            set
            {
                OnStampChanging(value);
                ReportPropertyChanging("Stamp");
                _Stamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stamp");
                OnStampChanged();
            }
        }
        private global::System.DateTime _Stamp;
        partial void OnStampChanging(global::System.DateTime value);
        partial void OnStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_Scores_DJs", "DJs")]
        public DJ DJ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DJ>("IIDXModel.FK_Scores_DJs", "DJs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DJ>("IIDXModel.FK_Scores_DJs", "DJs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DJ> DJReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DJ>("IIDXModel.FK_Scores_DJs", "DJs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DJ>("IIDXModel.FK_Scores_DJs", "DJs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_Scores_Songs", "Songs")]
        public Song Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("IIDXModel.FK_Scores_Songs", "Songs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("IIDXModel.FK_Scores_Songs", "Songs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Song> SongReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("IIDXModel.FK_Scores_Songs", "Songs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Song>("IIDXModel.FK_Scores_Songs", "Songs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IIDXModel", Name="Song")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Song : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Song object.
        /// </summary>
        /// <param name="songID">Initial value of the SongID property.</param>
        /// <param name="modeID">Initial value of the ModeID property.</param>
        /// <param name="songInfoID">Initial value of the SongInfoID property.</param>
        /// <param name="totalNotes">Initial value of the TotalNotes property.</param>
        /// <param name="difficulty">Initial value of the Difficulty property.</param>
        public static Song CreateSong(global::System.Int32 songID, global::System.Int32 modeID, global::System.Int32 songInfoID, global::System.Int32 totalNotes, global::System.Int32 difficulty)
        {
            Song song = new Song();
            song.SongID = songID;
            song.ModeID = modeID;
            song.SongInfoID = songInfoID;
            song.TotalNotes = totalNotes;
            song.Difficulty = difficulty;
            return song;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SongID
        {
            get
            {
                return _SongID;
            }
            set
            {
                if (_SongID != value)
                {
                    OnSongIDChanging(value);
                    ReportPropertyChanging("SongID");
                    _SongID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SongID");
                    OnSongIDChanged();
                }
            }
        }
        private global::System.Int32 _SongID;
        partial void OnSongIDChanging(global::System.Int32 value);
        partial void OnSongIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModeID
        {
            get
            {
                return _ModeID;
            }
            set
            {
                OnModeIDChanging(value);
                ReportPropertyChanging("ModeID");
                _ModeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModeID");
                OnModeIDChanged();
            }
        }
        private global::System.Int32 _ModeID;
        partial void OnModeIDChanging(global::System.Int32 value);
        partial void OnModeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SongInfoID
        {
            get
            {
                return _SongInfoID;
            }
            set
            {
                OnSongInfoIDChanging(value);
                ReportPropertyChanging("SongInfoID");
                _SongInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongInfoID");
                OnSongInfoIDChanged();
            }
        }
        private global::System.Int32 _SongInfoID;
        partial void OnSongInfoIDChanging(global::System.Int32 value);
        partial void OnSongInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalNotes
        {
            get
            {
                return _TotalNotes;
            }
            set
            {
                OnTotalNotesChanging(value);
                ReportPropertyChanging("TotalNotes");
                _TotalNotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalNotes");
                OnTotalNotesChanged();
            }
        }
        private global::System.Int32 _TotalNotes;
        partial void OnTotalNotesChanging(global::System.Int32 value);
        partial void OnTotalNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Difficulty
        {
            get
            {
                return _Difficulty;
            }
            set
            {
                OnDifficultyChanging(value);
                ReportPropertyChanging("Difficulty");
                _Difficulty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Difficulty");
                OnDifficultyChanged();
            }
        }
        private global::System.Int32 _Difficulty;
        partial void OnDifficultyChanging(global::System.Int32 value);
        partial void OnDifficultyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_Songs_Modes", "Modes")]
        public Mode Mode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mode>("IIDXModel.FK_Songs_Modes", "Modes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mode>("IIDXModel.FK_Songs_Modes", "Modes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mode> ModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mode>("IIDXModel.FK_Songs_Modes", "Modes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mode>("IIDXModel.FK_Songs_Modes", "Modes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_Scores_Songs", "Scores")]
        public EntityCollection<Score> Scores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Score>("IIDXModel.FK_Scores_Songs", "Scores");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Score>("IIDXModel.FK_Scores_Songs", "Scores", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_Songs_SongInfo", "SongInfo")]
        public SongInfo SongInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SongInfo>("IIDXModel.FK_Songs_SongInfo", "SongInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SongInfo>("IIDXModel.FK_Songs_SongInfo", "SongInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SongInfo> SongInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SongInfo>("IIDXModel.FK_Songs_SongInfo", "SongInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SongInfo>("IIDXModel.FK_Songs_SongInfo", "SongInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IIDXModel", Name="SongInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SongInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SongInfo object.
        /// </summary>
        /// <param name="songInfoID">Initial value of the SongInfoID property.</param>
        /// <param name="styleID">Initial value of the StyleID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="genre">Initial value of the Genre property.</param>
        /// <param name="artist">Initial value of the Artist property.</param>
        /// <param name="bPM">Initial value of the BPM property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        public static SongInfo CreateSongInfo(global::System.Int32 songInfoID, global::System.Int32 styleID, global::System.String title, global::System.String genre, global::System.String artist, global::System.String bPM, global::System.String notes)
        {
            SongInfo songInfo = new SongInfo();
            songInfo.SongInfoID = songInfoID;
            songInfo.StyleID = styleID;
            songInfo.Title = title;
            songInfo.Genre = genre;
            songInfo.Artist = artist;
            songInfo.BPM = bPM;
            songInfo.Notes = notes;
            return songInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SongInfoID
        {
            get
            {
                return _SongInfoID;
            }
            set
            {
                if (_SongInfoID != value)
                {
                    OnSongInfoIDChanging(value);
                    ReportPropertyChanging("SongInfoID");
                    _SongInfoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SongInfoID");
                    OnSongInfoIDChanged();
                }
            }
        }
        private global::System.Int32 _SongInfoID;
        partial void OnSongInfoIDChanging(global::System.Int32 value);
        partial void OnSongInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StyleID
        {
            get
            {
                return _StyleID;
            }
            set
            {
                OnStyleIDChanging(value);
                ReportPropertyChanging("StyleID");
                _StyleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StyleID");
                OnStyleIDChanged();
            }
        }
        private global::System.Int32 _StyleID;
        partial void OnStyleIDChanging(global::System.Int32 value);
        partial void OnStyleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Genre
        {
            get
            {
                return _Genre;
            }
            set
            {
                OnGenreChanging(value);
                ReportPropertyChanging("Genre");
                _Genre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Genre");
                OnGenreChanged();
            }
        }
        private global::System.String _Genre;
        partial void OnGenreChanging(global::System.String value);
        partial void OnGenreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BPM
        {
            get
            {
                return _BPM;
            }
            set
            {
                OnBPMChanging(value);
                ReportPropertyChanging("BPM");
                _BPM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BPM");
                OnBPMChanged();
            }
        }
        private global::System.String _BPM;
        partial void OnBPMChanging(global::System.String value);
        partial void OnBPMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_CSRevivals_SongInfo", "CSRevivals")]
        public EntityCollection<CSRevival> CSRevivals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CSRevival>("IIDXModel.FK_CSRevivals_SongInfo", "CSRevivals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CSRevival>("IIDXModel.FK_CSRevivals_SongInfo", "CSRevivals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_SongInfo_Styles", "Styles")]
        public Style Style
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("IIDXModel.FK_SongInfo_Styles", "Styles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("IIDXModel.FK_SongInfo_Styles", "Styles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Style> StyleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("IIDXModel.FK_SongInfo_Styles", "Styles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Style>("IIDXModel.FK_SongInfo_Styles", "Styles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_Songs_SongInfo", "Songs")]
        public EntityCollection<Song> Songs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Song>("IIDXModel.FK_Songs_SongInfo", "Songs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Song>("IIDXModel.FK_Songs_SongInfo", "Songs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IIDXModel", Name="Style")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Style : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Style object.
        /// </summary>
        /// <param name="styleID">Initial value of the StyleID property.</param>
        /// <param name="styleName">Initial value of the StyleName property.</param>
        /// <param name="theme">Initial value of the Theme property.</param>
        public static Style CreateStyle(global::System.Int32 styleID, global::System.String styleName, global::System.String theme)
        {
            Style style = new Style();
            style.StyleID = styleID;
            style.StyleName = styleName;
            style.Theme = theme;
            return style;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StyleID
        {
            get
            {
                return _StyleID;
            }
            set
            {
                if (_StyleID != value)
                {
                    OnStyleIDChanging(value);
                    ReportPropertyChanging("StyleID");
                    _StyleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StyleID");
                    OnStyleIDChanged();
                }
            }
        }
        private global::System.Int32 _StyleID;
        partial void OnStyleIDChanging(global::System.Int32 value);
        partial void OnStyleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StyleOrder
        {
            get
            {
                return _StyleOrder;
            }
            set
            {
                OnStyleOrderChanging(value);
                ReportPropertyChanging("StyleOrder");
                _StyleOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StyleOrder");
                OnStyleOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _StyleOrder;
        partial void OnStyleOrderChanging(Nullable<global::System.Int32> value);
        partial void OnStyleOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StyleName
        {
            get
            {
                return _StyleName;
            }
            set
            {
                OnStyleNameChanging(value);
                ReportPropertyChanging("StyleName");
                _StyleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StyleName");
                OnStyleNameChanged();
            }
        }
        private global::System.String _StyleName;
        partial void OnStyleNameChanging(global::System.String value);
        partial void OnStyleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Theme
        {
            get
            {
                return _Theme;
            }
            set
            {
                OnThemeChanging(value);
                ReportPropertyChanging("Theme");
                _Theme = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Theme");
                OnThemeChanged();
            }
        }
        private global::System.String _Theme;
        partial void OnThemeChanging(global::System.String value);
        partial void OnThemeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_CSRevivals_Styles", "CSRevivals")]
        public EntityCollection<CSRevival> CSRevivals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CSRevival>("IIDXModel.FK_CSRevivals_Styles", "CSRevivals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CSRevival>("IIDXModel.FK_CSRevivals_Styles", "CSRevivals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IIDXModel", "FK_SongInfo_Styles", "SongInfo")]
        public EntityCollection<SongInfo> SongInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SongInfo>("IIDXModel.FK_SongInfo_Styles", "SongInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SongInfo>("IIDXModel.FK_SongInfo_Styles", "SongInfo", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
